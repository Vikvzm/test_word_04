{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AC/G6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI,YAAY,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACzG0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACjLpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACF;;;;;;;;;;;;;;;AC5EnB,iBAAiB,oFAAoF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC9OrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC5CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC5HpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA;AACA;AACkB;AACG;;;;;;;UCtBrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA,CAAmC;AACnC,CAAsC;AACtC,CAAqC;AACrC,CAAqC;AACrC,CAAmC;AACnC,CAAqC;AACrC,CAAuC;AACvC,CAA4C;AAC5C;AACA;AACA;AACA,uCAAuC,yDAAS;AAChD;AACA,CAAC,yDAAI;AACL,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,yDAAI;AACL,CAAC,0DAAK;AACN,CAAC,2DAAM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU,MAAM,SAAS;AACnD,iDAAiD,WAAW;AAC5D,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI,YAAY,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA,mBAAmB;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,mBAAmB;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,qCAAqC,WAAW;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://food-dist/./js/modules/calc.js","webpack://food-dist/./js/modules/cards.js","webpack://food-dist/./js/modules/forms.js","webpack://food-dist/./js/modules/modal.js","webpack://food-dist/./js/modules/slider.js","webpack://food-dist/./js/modules/tabs.js","webpack://food-dist/./js/modules/timer.js","webpack://food-dist/./js/services/services.js","webpack://food-dist/webpack/bootstrap","webpack://food-dist/webpack/runtime/define property getters","webpack://food-dist/webpack/runtime/hasOwnProperty shorthand","webpack://food-dist/webpack/runtime/make namespace object","webpack://food-dist/./js/script.js"],"sourcesContent":["function calc() {\r\n    //создаем калькулятор\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSetting(selector, activClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSetting('#gender div', 'calculating__choose-item_active');\r\n    initLocalSetting('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calsTotal() {\r\n        if (!sex || !height || !weight || !age) {\r\n            result.textContent = \"______\";\r\n            return;\r\n        }\r\n        if (sex == 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (5.7 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88,6 +(13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    calsTotal();\r\n\r\n    function getStaticInformation(selector, activclass) {\r\n        const  elements = document.querySelectorAll(selector);\r\n\r\n        // document.querySelector(parentSelector). заменяем\r\n        //document.querySelector(parentSelector).addEventListener('click', (e) => {\r\n        elements.forEach(elem =>{\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else  {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                //удаляем всю активность\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activclass);\r\n                });\r\n                //устанавливаем класс активности\r\n                e.target.classList.add(activclass);\r\n\r\n                calsTotal()\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none'\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calsTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services'\r\n\r\nfunction cards() {\r\n    // Создаем карточки при помощи класса\r\n    class MenuCard {\r\n        constructor(scr, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.scr = scr;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 3;\r\n            this.changeToBYN();\r\n        }\r\n\r\n        changeToBYN() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            //назначаем элемент по умолчании\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n<!--            <div class=\"menu__item\">-->\r\n            <img src=${this.scr} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> руб./день</div>\r\n            </div>\r\n<!--            </div>-->\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n    //вывод карточек через библиотеку axios вместо getResource\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    //создаем функцию для размещения карточки с сервера\r\n\r\n    //\r\n    // const getResource = async (url) => {\r\n    //     const rec = await fetch(url);\r\n    //     if (!rec.ok) {\r\n    //         throw new Error(`Could not featch ${url}, status: ${res.status}`);\r\n    //     }\r\n    //     return await rec.json();\r\n    // };\r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     });\r\n\r\n\r\n\r\n\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     23,\r\n    //     '.menu .container'\r\n    // ).render();\r\n    //\r\n    // new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     'Меню “Премиум”',\r\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n    //     55,\r\n    //     '.menu .container'\r\n    // ).render();\r\n    //\r\n    // new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     'Меню \"Постное\"',\r\n    //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n    //     43,\r\n    //     '.menu .container'\r\n    // ).render();\r\n\r\n}\r\n\r\nexport default cards;","import {openModal, closeModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    // forma\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n    // сообщения для вывода в окно\r\n    const message = {\r\n        // loading: 'Загрузка',\r\n        //заменяем текст на файл спинера\r\n        loading: 'img/form/005 spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло е так...'\r\n    };\r\n    //итерируем forms и производим действия при помощи функции postData\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            // const statusMassge = document.createElement('div');\r\n            // statusMassge.classList.add('status');\r\n            // statusMassge.textContent = message.loading;\r\n            // form.append(statusMassge);\r\n            //заменяем для спиера\r\n            const statusMassge = document.createElement('img');\r\n            statusMassge.src = message.loading;\r\n            statusMassge.style.cssText = `\r\n                display: black;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMassge);\r\n            //заменяем append\r\n            form.insertAdjacentElement('afterend', statusMassge);\r\n\r\n            //редактируем при помощи промисов\r\n            // const request = new XMLHttpRequest();\r\n            // request.open('POST', 'server.php');\r\n\r\n            // // блок для обычной формы.\r\n            // //request.setRequestHeader('Content-type', 'multipart/form-data'); //название давать не надо при обычном формате\r\n            //\r\n            // const formData = new FormData(form);\r\n            // request.send(formData);\r\n\r\n            //блок для формата json, нужно устанавливать заголовок\r\n            // request.setRequestHeader('Content-type', 'application/json');\r\n\r\n\r\n            const formData = new FormData(form);\r\n\r\n            //заменяем на более элегантный код\r\n            // const object = {};\r\n            // formData.forEach(function (value, key) {\r\n            //     object[key] = value;\r\n            // });\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n\r\n            //заменяем на блок feach\r\n            // fetch('server.php', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-type': 'application/json'\r\n            //     },\r\n            //     body: JSON.stringify(object)\r\n            // })\r\n            //блок feach заменяем на функцию postData\r\n            // postData('server.php', JSON.stringify(object))\r\n            //заменяем 'server.php' на http://localhost:3000/requests\r\n            // postData('http://localhost:3000/requests', JSON.stringify(object))\r\n            //заменяем JSON.stringify(object) на json\r\n            postData('http://localhost:3000/requests', json)\r\n                //убираем трансформацию, делается в другом месте\r\n                // .then(data => data.text())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    form.reset();\r\n                    statusMassge.remove();\r\n                })\r\n                .catch(() => {\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    form.reset();\r\n                });\r\n            // const json = JSON.stringify(object); //перенесли выше во fetch\r\n            // request.send(json);\r\n\r\n            //редактируем вывод сообщения в связи с добавлением нового модального окна\r\n            // request.addEventListener('load', () => {\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         statusMassge.textContent = message.success;\r\n            //         form.reset();\r\n            //         setTimeout(() => {\r\n            //             statusMassge.remove();\r\n            //         }, 2000);\r\n            //     } else {\r\n            //         statusMassge.textContent = message.loading\r\n            //     }\r\n            // request.addEventListener('load', () => {\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         showThanksModal(message.success);\r\n            //         form.reset();\r\n            //         statusMassge.remove();\r\n            //     } else {\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // })\r\n        });\r\n    }\r\n\r\n    //модальное окно для оповещения пользователя\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        //скрываем модальное окно с запросом\r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTimerId);\r\n\r\n        //создаем блок обертка для модального окна\r\n        const thankModal = document.createElement('div');\r\n        thankModal.classList.add('modal__dialog');\r\n        thankModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class=\"modal__close\" data-close>&times;</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n        </div> \r\n        `;\r\n        //выводим на экран\r\n        document.querySelector('.modal').append(thankModal);\r\n\r\n        setTimeout(() => {\r\n            thankModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n\r\n\r\n    //настраиваем спинер для загрузки\r\n\r\n    //Настройка promise, fetch API тест\r\n    // URL запрос\r\n    // fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    //     .then(response => response.json())\r\n    //     .then(json => console.log(json));\r\n\r\n    //делаем POST запрос который обрабатываеться на бэкенде test\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({name: \"Alex\"}),\r\n    //     headers: {\r\n    //         'Content-type': 'application/json'\r\n    //     }\r\n    // })\r\n    //     .then(response => response.json())\r\n    //     .then(json => console.log(json));\r\n\r\n\r\n\r\n    //??? непонятно\r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n\r\n}\r\n\r\nexport default forms;","\r\n//открывает модульное окно\r\nfunction openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    //можно заменить верхние две строки(toggle - если нет то добавит, если есть то удалит)\r\n    // modal.classList.toggle('show')\r\n    document.body.style.overflow = 'hidden';\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);\r\n    }\r\n\r\n};\r\n\r\n//закрытие модального окна\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    //можно заменить верхние две строки(toggle - если нет то добавит, если есть то удалит)\r\n    //modal.classList.toggle('show')\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    // Modal блок\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n        modal = document.querySelector(modalSelector);\r\n    // modeCloseBtn = document.querySelector('[data-close]'); //блокируем при добавления нового модал окна\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });\r\n\r\n\r\n\r\n    // modeCloseBtn.addEventListener('click', closeModal); //блокируем при добавления нового модал окна\r\n\r\n    //редактируем добовляя проверку на клик крестик event.target.getAttribute('data-close') == ''\r\n    modal.addEventListener('click', (event) => {\r\n        if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n            // if (event.target === modal) {\r\n            // modal.classList.add('hide');\r\n            // modal.classList.remove('show');\r\n            // document.body.style.overflow = '';\r\n            //заменяем функцией\r\n            closeModal(modalSelector);\r\n\r\n        }\r\n    });\r\n\r\n    //отлавливаем событие кнопки(нажатие)\r\n    document.addEventListener('keydown', (e) => {\r\n        // проверяем на код нажатой кнопки и открыто ли модальное окно для сработки клавиши esc\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n    // // создаем таймер для появления модального окна\r\n    // const modalTimerId = setTimeout(openModal, 10000);\r\n\r\n    // появления модального окна после просмотра всей страницы\r\n    function showModalByScroll() {\r\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {openModal};\r\nexport {closeModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter,wrapper, field}) {\r\n    // создание слайда\r\n    // const slides = document.querySelectorAll('.offer__slide'),\r\n    //     slider = document.querySelector('.offer__slider'),\r\n    //     prev = document.querySelector('.offer__slider-prev'),\r\n    //     next = document.querySelector('.offer__slider-next'),\r\n    //     total = document.querySelector('#total'),\r\n    //     current = document.querySelector('#current'),\r\n    //     slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n    //     slidesField = document.querySelector('.offer__slider-inner'),\r\n    //     width = window.getComputedStyle(slidesWrapper).width;\r\n    const slides = document.querySelectorAll(slide),\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        width = window.getComputedStyle(slidesWrapper).width,\r\n        slidesField = document.querySelector(field);\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    function slideZero(slideIndex) {\r\n        if (slideIndex < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    };\r\n\r\n    function slideShow(slideIndex) {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    };\r\n\r\n\r\n\r\n    //слайд вариант 1\r\n\r\n    //\r\n    // showSledes(slideIndex);\r\n    //\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n    //\r\n    // function showSledes(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n    //     //скрываем все слайды\r\n    //     slides.forEach(item => item.style.display = 'none');\r\n    //     //выводим нужный слайд\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n    //\r\n    //     if (slideIndex < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n    // function plusSlides(n) {\r\n    //     showSledes(slideIndex += n);\r\n    // }\r\n    //\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n    //\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n    //слайд вариант2 карусель\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = `${100 * slides.length}%`;\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    //точки на слайде\r\n    slider.style.position = 'relative';\r\n    const  indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n        box-sizing: content-box;\r\n        flex: 0 1 auto;\r\n        width: 30px;\r\n        height: 6px;\r\n        margin-right: 3px;\r\n        margin-left: 3px;\r\n        cursor: pointer;\r\n        background-color: #fff;\r\n        background-clip: padding-box;\r\n        border-top: 10px solid transparent;\r\n        border-bottom: 10px solid transparent;\r\n        opacity: .5;\r\n        transition: opacity .6s ease;\r\n      `;\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    };\r\n\r\n    function deleteNotDigits(width) {\r\n        return +width.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if(offset == deleteNotDigits(width) * (slides.length -1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translatex(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        slideZero(slideIndex);\r\n        slideShow(slideIndex);\r\n        //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n        // if (slideIndex < 10) {\r\n        //     current.textContent = `0${slideIndex}`;\r\n        // } else {\r\n        //     current.textContent = slideIndex;\r\n        // }\r\n\r\n        // dots.forEach(dot => dot.style.opacity = '.5');\r\n        // dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if(offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length -1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translatex(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        slideZero(slideIndex);\r\n        slideShow(slideIndex);\r\n        //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n        // if (slideIndex < 10) {\r\n        //     current.textContent = `0${slideIndex}`;\r\n        // } else {\r\n        //     current.textContent = slideIndex;\r\n        // }\r\n\r\n        // dots.forEach(dot => dot.style.opacity = '.5');\r\n        // dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    //выбор слайдера по точке\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (event) => {\r\n            const slideTo = event.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\r\n\r\n            slideZero(slideIndex);\r\n            slideShow(slideIndex);\r\n            //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n            // if (slideIndex < 10) {\r\n            //     current.textContent = `0${slideIndex}`;\r\n            // } else {\r\n            //     current.textContent = slideIndex;\r\n            // }\r\n            // dots.forEach(dot => dot.style.opacity = '.5');\r\n            // dots[slideIndex - 1].style.opacity = 1;\r\n\r\n        });\r\n    });\r\n\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activClass) {\r\n    //tabs\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            // item.style.display = 'none';\r\n            //   заменяем классом\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        // tabsContent[i].style.display = 'block';\r\n        // заменяем на класс\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target === item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport default tabs;","// function timer(id, deadline) {\r\n//     //add Timer\r\n//     // const deadline = '2024-11-01';\r\n//\r\n//     //функция переводит секунды в дни, часы, минуты, секунды\r\n//     function getTimeRemaining(endtime) {\r\n//         const t = Date.parse(endtime) - Date.parse(new Date());\r\n//         if (t <= 0) {\r\n//             days = 0;\r\n//             hours = 0;\r\n//             minutes = 0;\r\n//             seconds = 0;\r\n//\r\n//         } else {\r\n//             days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n//             hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n//             minutes = Math.floor((t / 1000 / 60) % 60);\r\n//             seconds = Math.floor((t / 1000) % 60);\r\n//         }\r\n//\r\n//         return {\r\n//             total: t,\r\n//             days: days,\r\n//             hours: hours,\r\n//             minutes: minutes,\r\n//             seconds: seconds\r\n//         };\r\n//     }\r\n//\r\n//     //запускаем  числа в таймере\r\n//     function setClock(selector, endtime) {\r\n//         const timer = document.querySelector(selector),\r\n//             days = timer.querySelector('#days'),\r\n//             hours = timer.querySelector('#hours'),\r\n//             minutes = timer.querySelector('#minutes'),\r\n//             seconds = timer.querySelector('#seconds'),\r\n//             timeInterval = setInterval(updateClock, 1000);\r\n//\r\n//         updateClock();\r\n//\r\n//         // //заменяем таймер на странице\r\n//         // function updateClock() {\r\n//         //     const t = getTimeRemaining(endtime);\r\n//         //\r\n//         //     days.innerHTML = getZero(t.days);\r\n//         //     hours.innerHTML = getZero(t.hours);\r\n//         //     minutes.innerHTML = getZero(t.minutes);\r\n//         //     seconds.innerHTML = getZero(t.seconds);\r\n//         //\r\n//         //     if (t.total <= 0) {\r\n//         //         clearInterval(timeInterval);\r\n//         //     }\r\n//         // }\r\n//     }\r\n//\r\n//     //добавлем ноль перед числом\r\n//     function getZero(num) {\r\n//         if (num >= 0 && num < 10) {\r\n//             return `0${num}`\r\n//         } else {\r\n//             return num\r\n//         }\r\n//     }\r\n//\r\n//     setClock(id, deadline);\r\n// }\r\n//\r\n// export default timer;\r\n\r\n\r\n\r\nfunction timer(id, deadline) {\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n            days = Math.floor( (t/(1000*60*60*24)) ),\r\n            seconds = Math.floor( (t/1000) % 60 ),\r\n            minutes = Math.floor( (t/1000/60) % 60 ),\r\n            hours = Math.floor( (t/(1000*60*60) % 24) );\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num){\r\n        if (num >= 0 && num < 10) {\r\n            return '0' + num;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector(\"#days\"),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","const  postData = async (url, data) => {\r\n    const  res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n    return await res.json();\r\n};\r\n\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"," import tabs from './modules/tabs';\r\n import modal  from './modules/modal';\r\n import timer from './modules/timer';\r\n import cards from './modules/cards';\r\n import calc from './modules/calc';\r\n import forms from './modules/forms';\r\n import slider from './modules/slider';\r\n import {openModal}  from './modules/modal';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 300000);\r\n\r\n tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n modal('[data-modal]', '.modal', modalTimerId);\r\n timer('.timer', '2025-01-01');\r\n cards();\r\n calc();\r\n forms('form', modalTimerId);\r\n slider({\r\n     container: '.offer__slider',\r\n     slide: '.offer__slide',\r\n     nextArrow: '.offer__slider-next',\r\n     prevArrow: '.offer__slider-prev',\r\n     totalCounter: '#total',\r\n     currentCounter: '#current',\r\n     wrapper: '.offer__slider-wrapper',\r\n     field: '.offer__slider-inner'\r\n });\r\n});\r\n\r\n    // //tabs\r\n    // const tabs = document.querySelectorAll('.tabheader__item'),\r\n    //     tabsContent = document.querySelectorAll('.tabcontent'),\r\n    //     tabsParent = document.querySelector('.tabheader__items');\r\n    //\r\n    // function hideTabContent() {\r\n    //     tabsContent.forEach(item => {\r\n    //         // item.style.display = 'none';\r\n    //         //   заменяем классом\r\n    //         item.classList.add('hide');\r\n    //         item.classList.remove('show', 'fade');\r\n    //     });\r\n    //\r\n    //     tabs.forEach(item => {\r\n    //         item.classList.remove('tabheader__item_active');\r\n    //     });\r\n    // }\r\n    //\r\n    // function showTabContent(i = 0) {\r\n    //     // tabsContent[i].style.display = 'block';\r\n    //     // заменяем на класс\r\n    //     tabsContent[i].classList.add('show', 'fade');\r\n    //     tabsContent[i].classList.remove('hide');\r\n    //     tabs[i].classList.add('tabheader__item_active');\r\n    // }\r\n    //\r\n    // hideTabContent();\r\n    // showTabContent();\r\n    //\r\n    // tabsParent.addEventListener('click', (event) => {\r\n    //     const target = event.target;\r\n    //     if (target && target.classList.contains('tabheader__item')) {\r\n    //         tabs.forEach((item, i) => {\r\n    //             if (target === item) {\r\n    //                 hideTabContent();\r\n    //                 showTabContent(i);\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // //add Timer\r\n    // const deadline = '2024-10-01';\r\n    //\r\n    // //функция переводит секунды в дни, часы, минуты, секунды\r\n    // function getTimeRemaining(endtime) {\r\n    //     const t = Date.parse(endtime) - Date.parse(new Date());\r\n    //     if (t <= 0) {\r\n    //         days = 0;\r\n    //         hours = 0;\r\n    //         minutes = 0;\r\n    //         seconds = 0;\r\n    //\r\n    //     } else {\r\n    //         days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n    //         hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n    //         minutes = Math.floor((t / 1000 / 60) % 60);\r\n    //         seconds = Math.floor((t / 1000) % 60);\r\n    //     }\r\n    //\r\n    //     return {\r\n    //         total: t,\r\n    //         days: days,\r\n    //         hours: hours,\r\n    //         minutes: minutes,\r\n    //         seconds: seconds\r\n    //     };\r\n    // }\r\n    //\r\n    // //запускаем  числа в таймере\r\n    // function setClock(selector, endtime) {\r\n    //     const timer = document.querySelector(selector),\r\n    //         days = timer.querySelector('#days'),\r\n    //         hours = timer.querySelector('#hours'),\r\n    //         minutes = timer.querySelector('#minutes'),\r\n    //         seconds = timer.querySelector('#seconds'),\r\n    //         timeInterval = setInterval(updateClock, 1000);\r\n    //\r\n    //     updateClock();\r\n    //\r\n    //     //заменяем таймер на странице\r\n    //     function updateClock() {\r\n    //         const t = getTimeRemaining(endtime);\r\n    //\r\n    //         days.innerHTML = getZero(t.days);\r\n    //         hours.innerHTML = getZero(t.hours);\r\n    //         minutes.innerHTML = getZero(t.minutes);\r\n    //         seconds.innerHTML = getZero(t.seconds);\r\n    //\r\n    //         if (t.total <= 0) {\r\n    //             clearInterval(timeInterval);\r\n    //         }\r\n    //     }\r\n    // }\r\n    //\r\n    // //добавлем ноль перед числом\r\n    // function getZero(num) {\r\n    //     if (num >= 0 && num < 10) {\r\n    //         return `0${num}`\r\n    //     } else {\r\n    //         return num\r\n    //     }\r\n    // }\r\n    //\r\n    // setClock('.timer', deadline);\r\n\r\n    // // Modal блок\r\n    //\r\n    // const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n    //     modal = document.querySelector('.modal');\r\n    // // modeCloseBtn = document.querySelector('[data-close]'); //блокируем при добавления нового модал окна\r\n    //\r\n    // //открывает модульное окно\r\n    // function openModal() {\r\n    //     modal.classList.add('show');\r\n    //     modal.classList.remove('hide');\r\n    //     //можно заменить верхние две строки(toggle - если нет то добавит, если есть то удалит)\r\n    //     // modal.classList.toggle('show')\r\n    //     document.body.style.overflow = 'hidden';\r\n    //     clearInterval(modalTimerId);\r\n    // };\r\n    //\r\n    // modalTrigger.forEach(btn => {\r\n    //     btn.addEventListener('click', openModal);\r\n    // });\r\n    //\r\n    // //закрытие модального окна\r\n    // function closeModal() {\r\n    //     modal.classList.add('hide');\r\n    //     modal.classList.remove('show');\r\n    //     //можно заменить верхние две строки(toggle - если нет то добавит, если есть то удалит)\r\n    //     //modal.classList.toggle('show')\r\n    //     document.body.style.overflow = '';\r\n    // }\r\n    //\r\n    // // modeCloseBtn.addEventListener('click', closeModal); //блокируем при добавления нового модал окна\r\n    //\r\n    // //редактируем добовляя проверку на клик крестик event.target.getAttribute('data-close') == ''\r\n    // modal.addEventListener('click', (event) => {\r\n    //     if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n    //         // if (event.target === modal) {\r\n    //         // modal.classList.add('hide');\r\n    //         // modal.classList.remove('show');\r\n    //         // document.body.style.overflow = '';\r\n    //         //заменяем функцией\r\n    //         closeModal()\r\n    //\r\n    //     }\r\n    // });\r\n    //\r\n    // //отлавливаем событие кнопки(нажатие)\r\n    // document.addEventListener('keydown', (e) => {\r\n    //     // проверяем на код нажатой кнопки и открыто ли модальное окно для сработки клавиши esc\r\n    //     if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n    //         closeModal()\r\n    //     }\r\n    // });\r\n    // // создаем таймер для появления модального окна\r\n    // const modalTimerId = setTimeout(openModal, 10000);\r\n    //\r\n    // // появления модального окна после просмотра всей страницы\r\n    // function showModalByScroll() {\r\n    //     if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n    //         openModal();\r\n    //         window.removeEventListener('scroll', showModalByScroll);\r\n    //     }\r\n    // }\r\n    //\r\n    // window.addEventListener('scroll', showModalByScroll);\r\n\r\n//     // Создаем карточки при помощи класса\r\n//     class MenuCard {\r\n//         constructor(scr, alt, title, descr, price, parentSelector, ...classes) {\r\n//             this.scr = scr;\r\n//             this.alt = alt;\r\n//             this.title = title;\r\n//             this.descr = descr;\r\n//             this.price = price;\r\n//             this.classes = classes;\r\n//             this.parent = document.querySelector(parentSelector);\r\n//             this.transfer = 3;\r\n//             this.changeToBYN();\r\n//         }\r\n//\r\n//         changeToBYN() {\r\n//             this.price = this.price * this.transfer;\r\n//         }\r\n//\r\n//         render() {\r\n//             const element = document.createElement('div');\r\n//             //назначаем элемент по умолчании\r\n//             if (this.classes.length === 0) {\r\n//                 this.element = 'menu__item';\r\n//                 element.classList.add(this.element);\r\n//             } else {\r\n//                 this.classes.forEach(className => element.classList.add(className));\r\n//             }\r\n//\r\n//             element.innerHTML = `\r\n// <!--            <div class=\"menu__item\">-->\r\n//             <img src=${this.scr} alt=${this.alt}>\r\n//             <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n//             <div class=\"menu__item-descr\">${this.descr}</div>\r\n//             <div class=\"menu__item-divider\"></div>\r\n//             <div class=\"menu__item-price\">\r\n//                 <div class=\"menu__item-cost\">Цена:</div>\r\n//                 <div class=\"menu__item-total\"><span>${this.price}</span> руб./день</div>\r\n//             </div>\r\n// <!--            </div>-->\r\n//             `;\r\n//             this.parent.append(element);\r\n//         }\r\n//     }\r\n//     //создаем функцию для размещения карточки с сервера\r\n//\r\n//\r\n//     const getResource = async (url) => {\r\n//         const rec = await fetch(url);\r\n//         if (!rec.ok) {\r\n//             throw new Error(`Could not featch ${url}, status: ${res.status}`);\r\n//         }\r\n//         return await rec.json();\r\n//     };\r\n//\r\n//     // getResource('http://localhost:3000/menu')\r\n//     //     .then(data => {\r\n//     //         data.forEach(({img, altimg, title, descr, price}) => {\r\n//     //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n//     //         });\r\n//     //     });\r\n//\r\n//     //вывод карточек через библиотеку axios вместо getResource\r\n//     axios.get('http://localhost:3000/menu')\r\n//         .then(data => {\r\n//             data.data.forEach(({img, altimg, title, descr, price}) => {\r\n//                 new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n//             });\r\n//         });\r\n//\r\n//\r\n//\r\n//     // new MenuCard(\r\n//     //     \"img/tabs/vegy.jpg\",\r\n//     //     \"vegy\",\r\n//     //     'Меню \"Фитнес\"',\r\n//     //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n//     //     23,\r\n//     //     '.menu .container'\r\n//     // ).render();\r\n//     //\r\n//     // new MenuCard(\r\n//     //     \"img/tabs/elite.jpg\",\r\n//     //     \"elite\",\r\n//     //     'Меню “Премиум”',\r\n//     //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n//     //     55,\r\n//     //     '.menu .container'\r\n//     // ).render();\r\n//     //\r\n//     // new MenuCard(\r\n//     //     \"img/tabs/post.jpg\",\r\n//     //     \"post\",\r\n//     //     'Меню \"Постное\"',\r\n//     //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n//     //     43,\r\n//     //     '.menu .container'\r\n//     // ).render();\r\n\r\n    // // forma\r\n    //\r\n    // const forms = document.querySelectorAll('form');\r\n    // // сообщения для вывода в окно\r\n    // const message = {\r\n    //     // loading: 'Загрузка',\r\n    //     //заменяем текст на файл спинера\r\n    //     loading: 'img/form/005 spinner.svg',\r\n    //     success: 'Спасибо! Скоро мы с вами свяжемся',\r\n    //     failure: 'Что-то пошло е так...'\r\n    // };\r\n    // //итерируем forms и производим действия при помощи функции postData\r\n    // forms.forEach(item => {\r\n    //     bindPostData(item);\r\n    // });\r\n    //\r\n    // const  postData = async (url, data) => {\r\n    //     const  res = await fetch(url, {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             'Content-type': 'application/json'\r\n    //         },\r\n    //         body: data\r\n    //     });\r\n    //     return await res.json();\r\n    // };\r\n    //\r\n    // function bindPostData(form) {\r\n    //     form.addEventListener('submit', (e) => {\r\n    //         e.preventDefault();\r\n    //\r\n    //         // const statusMassge = document.createElement('div');\r\n    //         // statusMassge.classList.add('status');\r\n    //         // statusMassge.textContent = message.loading;\r\n    //         // form.append(statusMassge);\r\n    //         //заменяем для спиера\r\n    //         const statusMassge = document.createElement('img');\r\n    //         statusMassge.src = message.loading;\r\n    //         statusMassge.style.cssText = `\r\n    //             display: black;\r\n    //             margin: 0 auto;\r\n    //         `;\r\n    //         // form.append(statusMassge);\r\n    //         //заменяем append\r\n    //         form.insertAdjacentElement('afterend', statusMassge);\r\n    //\r\n    //         //редактируем при помощи промисов\r\n    //         // const request = new XMLHttpRequest();\r\n    //         // request.open('POST', 'server.php');\r\n    //\r\n    //         // // блок для обычной формы.\r\n    //         // //request.setRequestHeader('Content-type', 'multipart/form-data'); //название давать не надо при обычном формате\r\n    //         //\r\n    //         // const formData = new FormData(form);\r\n    //         // request.send(formData);\r\n    //\r\n    //         //блок для формата json, нужно устанавливать заголовок\r\n    //         // request.setRequestHeader('Content-type', 'application/json');\r\n    //\r\n    //\r\n    //         const formData = new FormData(form);\r\n    //\r\n    //         //заменяем на более элегантный код\r\n    //         // const object = {};\r\n    //         // formData.forEach(function (value, key) {\r\n    //         //     object[key] = value;\r\n    //         // });\r\n    //         const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n    //\r\n    //\r\n    //         //заменяем на блок feach\r\n    //         // fetch('server.php', {\r\n    //         //     method: 'POST',\r\n    //         //     headers: {\r\n    //         //         'Content-type': 'application/json'\r\n    //         //     },\r\n    //         //     body: JSON.stringify(object)\r\n    //         // })\r\n    //         //блок feach заменяем на функцию postData\r\n    //         // postData('server.php', JSON.stringify(object))\r\n    //         //заменяем 'server.php' на http://localhost:3000/requests\r\n    //         // postData('http://localhost:3000/requests', JSON.stringify(object))\r\n    //         //заменяем JSON.stringify(object) на json\r\n    //         postData('http://localhost:3000/requests', json)\r\n    //             //убираем трансформацию, делается в другом месте\r\n    //             // .then(data => data.text())\r\n    //             .then(data => {\r\n    //                 console.log(data);\r\n    //                 showThanksModal(message.success);\r\n    //                 form.reset();\r\n    //                 statusMassge.remove();\r\n    //             })\r\n    //             .catch(() => {\r\n    //                 showThanksModal(message.failure);\r\n    //             })\r\n    //             .finally(() => {\r\n    //                 form.reset();\r\n    //             });\r\n    //         // const json = JSON.stringify(object); //перенесли выше во fetch\r\n    //         // request.send(json);\r\n    //\r\n    //         //редактируем вывод сообщения в связи с добавлением нового модального окна\r\n    //         // request.addEventListener('load', () => {\r\n    //         //     if (request.status === 200) {\r\n    //         //         console.log(request.response);\r\n    //         //         statusMassge.textContent = message.success;\r\n    //         //         form.reset();\r\n    //         //         setTimeout(() => {\r\n    //         //             statusMassge.remove();\r\n    //         //         }, 2000);\r\n    //         //     } else {\r\n    //         //         statusMassge.textContent = message.loading\r\n    //         //     }\r\n    //         // request.addEventListener('load', () => {\r\n    //         //     if (request.status === 200) {\r\n    //         //         console.log(request.response);\r\n    //         //         showThanksModal(message.success);\r\n    //         //         form.reset();\r\n    //         //         statusMassge.remove();\r\n    //         //     } else {\r\n    //         //         showThanksModal(message.failure);\r\n    //         //     }\r\n    //         // })\r\n    //     });\r\n    // }\r\n\r\n    // //модальное окно для оповещения пользователя\r\n    // function showThanksModal(message) {\r\n    //     const prevModalDialog = document.querySelector('.modal__dialog');\r\n    //\r\n    //     //скрываем модальное окно с запросом\r\n    //     prevModalDialog.classList.add('hide');\r\n    //     openModal();\r\n    //\r\n    //     //создаем блок обертка для модального окна\r\n    //     const thankModal = document.createElement('div');\r\n    //     thankModal.classList.add('modal__dialog');\r\n    //     thankModal.innerHTML = `\r\n    //     <div class=\"modal__content\">\r\n    //         <div class=\"modal__close\" data-close>&times;</div>\r\n    //         <div class=\"modal__title\">${message}</div>\r\n    //     </div>\r\n    //     `;\r\n    //     //выводим на экран\r\n    //     document.querySelector('.modal').append(thankModal);\r\n    //\r\n    //     setTimeout(() => {\r\n    //         thankModal.remove();\r\n    //         prevModalDialog.classList.add('show');\r\n    //         prevModalDialog.classList.remove('hide');\r\n    //         closeModal();\r\n    //     }, 4000);\r\n    // }\r\n    //\r\n    //\r\n    // //настраиваем спинер для загрузки\r\n    //\r\n    // //Настройка promise, fetch API тест\r\n    // // URL запрос\r\n    // // fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    // //     .then(response => response.json())\r\n    // //     .then(json => console.log(json));\r\n    //\r\n    // //делаем POST запрос который обрабатываеться на бэкенде test\r\n    // // fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    // //     method: \"POST\",\r\n    // //     body: JSON.stringify({name: \"Alex\"}),\r\n    // //     headers: {\r\n    // //         'Content-type': 'application/json'\r\n    // //     }\r\n    // // })\r\n    // //     .then(response => response.json())\r\n    // //     .then(json => console.log(json));\r\n    //\r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n\r\n\r\n    // // создание слайда\r\n    // const slides = document.querySelectorAll('.offer__slide'),\r\n    //     slider = document.querySelector('.offer__slider'),\r\n    //     prev = document.querySelector('.offer__slider-prev'),\r\n    //     next = document.querySelector('.offer__slider-next'),\r\n    //     total = document.querySelector('#total'),\r\n    //     current = document.querySelector('#current'),\r\n    //     slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n    //     slidesField = document.querySelector('.offer__slider-inner'),\r\n    //     width = window.getComputedStyle(slidesWrapper).width;\r\n    //\r\n    // let slideIndex = 1;\r\n    // let offset = 0;\r\n    //\r\n    // function slideZero(slideIndex) {\r\n    //     if (slideIndex < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // };\r\n    //\r\n    // function slideShow(slideIndex) {\r\n    //     dots.forEach(dot => dot.style.opacity = '.5');\r\n    //     dots[slideIndex - 1].style.opacity = 1;\r\n    // };\r\n    //\r\n    //\r\n    //\r\n    // //слайд вариант 1\r\n    //\r\n    // //\r\n    // // showSledes(slideIndex);\r\n    // //\r\n    // // if (slides.length < 10) {\r\n    // //     total.textContent = `0${slides.length}`;\r\n    // // } else {\r\n    // //     total.textContent = slides.length;\r\n    // // }\r\n    // //\r\n    // // function showSledes(n) {\r\n    // //     if (n > slides.length) {\r\n    // //         slideIndex = 1;\r\n    // //     }\r\n    // //     if (n < 1) {\r\n    // //         slideIndex = slides.length;\r\n    // //     }\r\n    // //     //скрываем все слайды\r\n    // //     slides.forEach(item => item.style.display = 'none');\r\n    // //     //выводим нужный слайд\r\n    // //     slides[slideIndex - 1].style.display = 'block';\r\n    // //\r\n    // //     if (slideIndex < 10) {\r\n    // //         current.textContent = `0${slideIndex}`;\r\n    // //     } else {\r\n    // //         current.textContent = slideIndex;\r\n    // //     }\r\n    // // }\r\n    // // function plusSlides(n) {\r\n    // //     showSledes(slideIndex += n);\r\n    // // }\r\n    // //\r\n    // // prev.addEventListener('click', () => {\r\n    // //     plusSlides(-1);\r\n    // // });\r\n    // //\r\n    // // next.addEventListener('click', () => {\r\n    // //     plusSlides(1);\r\n    // // });\r\n    //\r\n    // //слайд вариант2 карусель\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    //     current.textContent = `0${slideIndex}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    //     current.textContent = slideIndex;\r\n    // }\r\n    //\r\n    // slidesField.style.width = `${100 * slides.length}%`;\r\n    // slidesField.style.display = 'flex';\r\n    // slidesField.style.transition = '0.5s all';\r\n    //\r\n    // slidesWrapper.style.overflow = 'hidden';\r\n    //\r\n    // slides.forEach(slide => {\r\n    //     slide.style.width = width;\r\n    // });\r\n    //\r\n    // //точки на слайде\r\n    // slider.style.position = 'relative';\r\n    // const  indicators = document.createElement('ol'),\r\n    //     dots = [];\r\n    //\r\n    // indicators.classList.add('carousel-indicators');\r\n    // indicators.style.cssText = `\r\n    //     position: absolute;\r\n    //     right: 0;\r\n    //     bottom: 0;\r\n    //     left: 0;\r\n    //     z-index: 15;\r\n    //     display: flex;\r\n    //     justify-content: center;\r\n    //     margin-right: 15%;\r\n    //     margin-left: 15%;\r\n    //     list-style: none;\r\n    // `;\r\n    // slider.append(indicators);\r\n    //\r\n    // for (let i = 0; i < slides.length; i++) {\r\n    //     const dot = document.createElement('li');\r\n    //     dot.setAttribute('data-slide-to', i + 1);\r\n    //     dot.style.cssText = `\r\n    //     box-sizing: content-box;\r\n    //     flex: 0 1 auto;\r\n    //     width: 30px;\r\n    //     height: 6px;\r\n    //     margin-right: 3px;\r\n    //     margin-left: 3px;\r\n    //     cursor: pointer;\r\n    //     background-color: #fff;\r\n    //     background-clip: padding-box;\r\n    //     border-top: 10px solid transparent;\r\n    //     border-bottom: 10px solid transparent;\r\n    //     opacity: .5;\r\n    //     transition: opacity .6s ease;\r\n    //   `;\r\n    //\r\n    //     if (i == 0) {\r\n    //         dot.style.opacity = 1;\r\n    //     }\r\n    //     indicators.append(dot);\r\n    //     dots.push(dot);\r\n    // };\r\n    //\r\n    // function deleteNotDigits(width) {\r\n    //     return +width.replace(/\\D/g, '');\r\n    // }\r\n    //\r\n    // next.addEventListener('click', () => {\r\n    //     if(offset == deleteNotDigits(width) * (slides.length -1)) {\r\n    //         offset = 0;\r\n    //     } else {\r\n    //         offset += deleteNotDigits(width);\r\n    //     }\r\n    //\r\n    //     slidesField.style.transform = `translatex(-${offset}px)`;\r\n    //\r\n    //     if (slideIndex == slides.length) {\r\n    //         slideIndex = 1;\r\n    //     } else {\r\n    //         slideIndex++;\r\n    //     }\r\n    //\r\n    //     slideZero(slideIndex);\r\n    //     slideShow(slideIndex);\r\n    //     //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n    //     // if (slideIndex < 10) {\r\n    //     //     current.textContent = `0${slideIndex}`;\r\n    //     // } else {\r\n    //     //     current.textContent = slideIndex;\r\n    //     // }\r\n    //\r\n    //     // dots.forEach(dot => dot.style.opacity = '.5');\r\n    //     // dots[slideIndex - 1].style.opacity = 1;\r\n    // });\r\n    //\r\n    // prev.addEventListener('click', () => {\r\n    //     if(offset == 0) {\r\n    //         offset = deleteNotDigits(width) * (slides.length -1);\r\n    //     } else {\r\n    //         offset -= deleteNotDigits(width);\r\n    //     }\r\n    //\r\n    //     slidesField.style.transform = `translatex(-${offset}px)`;\r\n    //\r\n    //     if (slideIndex == 1) {\r\n    //         slideIndex = slides.length;\r\n    //     } else {\r\n    //         slideIndex--;\r\n    //     }\r\n    //\r\n    //     slideZero(slideIndex);\r\n    //     slideShow(slideIndex);\r\n    //     //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n    //     // if (slideIndex < 10) {\r\n    //     //     current.textContent = `0${slideIndex}`;\r\n    //     // } else {\r\n    //     //     current.textContent = slideIndex;\r\n    //     // }\r\n    //\r\n    //     // dots.forEach(dot => dot.style.opacity = '.5');\r\n    //     // dots[slideIndex - 1].style.opacity = 1;\r\n    // });\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // //выбор слайдера по точке\r\n    // dots.forEach(dot => {\r\n    //     dot.addEventListener('click', (event) => {\r\n    //         const slideTo = event.target.getAttribute('data-slide-to');\r\n    //\r\n    //         slideIndex = slideTo;\r\n    //\r\n    //         offset = deleteNotDigits(width) * (slideTo - 1);\r\n    //\r\n    //         slidesField.style.transform = `translateX(-${offset}px)`;\r\n    //\r\n    //\r\n    //\r\n    //         slideZero(slideIndex);\r\n    //         slideShow(slideIndex);\r\n    //         //заменяем на   slideZero(slideIndex) и slideShow(slideIndex);\r\n    //         // if (slideIndex < 10) {\r\n    //         //     current.textContent = `0${slideIndex}`;\r\n    //         // } else {\r\n    //         //     current.textContent = slideIndex;\r\n    //         // }\r\n    //         // dots.forEach(dot => dot.style.opacity = '.5');\r\n    //         // dots[slideIndex - 1].style.opacity = 1;\r\n    //\r\n    //     });\r\n    // });\r\n\r\n    // //создаем калькулятор\r\n    // const result = document.querySelector('.calculating__result span');\r\n    // let sex, height, weight, age, ratio;\r\n    //\r\n    // if (localStorage.getItem('sex')) {\r\n    //     sex = localStorage.getItem('sex');\r\n    // } else {\r\n    //     sex = 'female';\r\n    //     localStorage.setItem('sex', 'female');\r\n    // }\r\n    //\r\n    // if (localStorage.getItem('ratio')) {\r\n    //     ratio = localStorage.getItem('ratio');\r\n    // } else {\r\n    //     ratio = 1.375;\r\n    //     localStorage.setItem('ratio', 1.375);\r\n    // }\r\n    //\r\n    // function initLocalSetting(selector, activClass) {\r\n    //     const elements = document.querySelectorAll(selector);\r\n    //\r\n    //     elements.forEach(elem => {\r\n    //         elem.classList.remove(activClass);\r\n    //         if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n    //             elem.classList.add(activClass);\r\n    //         }\r\n    //         if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n    //             elem.classList.add(activClass);\r\n    //         }\r\n    //     });\r\n    // }\r\n    //\r\n    // initLocalSetting('#gender div', 'calculating__choose-item_active');\r\n    // initLocalSetting('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    //\r\n    // function calsTotal() {\r\n    //     if (!sex || !height || !weight || !age) {\r\n    //         result.textContent = \"______\";\r\n    //         return;\r\n    //     }\r\n    //     if (sex == 'female') {\r\n    //         result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (5.7 * age)) * ratio);\r\n    //     } else {\r\n    //         result.textContent = Math.round((88,6 +(13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n    //     }\r\n    // }\r\n    // calsTotal();\r\n    //\r\n    // function getStaticInformation(selector, activclass) {\r\n    //     const  elements = document.querySelectorAll(selector);\r\n    //\r\n    //     // document.querySelector(parentSelector). заменяем\r\n    //     //document.querySelector(parentSelector).addEventListener('click', (e) => {\r\n    //     elements.forEach(elem =>{\r\n    //         elem.addEventListener('click', (e) => {\r\n    //             if (e.target.getAttribute('data-ratio')) {\r\n    //                 ratio = +e.target.getAttribute('data-ratio');\r\n    //                 localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n    //             } else  {\r\n    //                 sex = e.target.getAttribute('id');\r\n    //                 localStorage.setItem('sex', e.target.getAttribute('id'));\r\n    //             }\r\n    //\r\n    //             //удаляем всю активность\r\n    //             elements.forEach(elem => {\r\n    //                 elem.classList.remove(activclass);\r\n    //             });\r\n    //             //устанавливаем класс активности\r\n    //             e.target.classList.add(activclass);\r\n    //\r\n    //             calsTotal()\r\n    //         });\r\n    //     });\r\n    // }\r\n    //\r\n    // getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    // getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    //\r\n    // function getDynamicInformation(selector) {\r\n    //     const input = document.querySelector(selector);\r\n    //\r\n    //     input.addEventListener('input', () => {\r\n    //\r\n    //         if (input.value.match(/\\D/g)) {\r\n    //             input.style.border = '1px solid red';\r\n    //         } else {\r\n    //             input.style.border = 'none'\r\n    //         }\r\n    //\r\n    //         switch (input.getAttribute('id')) {\r\n    //             case 'height':\r\n    //                 height = +input.value;\r\n    //                 break;\r\n    //             case 'weight':\r\n    //                 weight = +input.value;\r\n    //                 break;\r\n    //             case 'age':\r\n    //                 age = +input.value;\r\n    //                 break;\r\n    //         }\r\n    //         calsTotal();\r\n    //     });\r\n    //\r\n    // }\r\n    //\r\n    // getDynamicInformation('#height');\r\n    // getDynamicInformation('#weight');\r\n    // getDynamicInformation('#age');\r\n\r\n"],"names":[],"sourceRoot":""}